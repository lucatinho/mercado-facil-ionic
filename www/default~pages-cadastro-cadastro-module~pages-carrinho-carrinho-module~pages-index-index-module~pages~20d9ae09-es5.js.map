{"version":3,"sources":["src/app/shared/apimercado.service.ts","src/app/shared/var-usuario.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { BehaviorSubject } from 'rxjs';\nimport { VarUsuarioService } from './var-usuario.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApimercadoService {\n  // variavel mercado\n  private mercadoSelecionado = new BehaviorSubject<string>(\"0\");\n  currentMercadoSelecionado = this.mercadoSelecionado.asObservable();\n  // variavel categoria\n  private categoriaSelecionado = new BehaviorSubject<string>(\"1\");\n  currentCategoriaSelecionado = this.categoriaSelecionado.asObservable();\n  // variavel lista\n  private listaSelecionado = new BehaviorSubject<string>(\"0\");\n  currentListaSelecionado = this.listaSelecionado.asObservable();\n\n  // login =================================================================================================\n\n\n  constructor(private http: HttpClient, private saveUser: VarUsuarioService) { }\n\n  // mudar variavel mercado\n  changeMercadoSelecionado(mercado: string) {\n    this.mercadoSelecionado.next(mercado)\n    console.log(\"MercadoData: \", mercado);\n  }\n  // mudar variavel categoria\n  changeCategoriaSelecionado(categoria: string) {\n    this.categoriaSelecionado.next(categoria)\n    console.log(\"CategoriaData: \", categoria);\n  }\n  // mudar variavel lista\n  changeListaSelecionado(lista: string) {\n    this.listaSelecionado.next(lista)\n    console.log(\"ListaData: \", lista);\n  }\n  // GET ------------------------------------------------------------------------------------------------------------------\n\n  listarMercados() {\n    let username = 'servo'\n    let password = '123'\n    const headers = new HttpHeaders({ Authorization: 'Basic ' + btoa(username + ':' + password) });\n    // link local\n    // return this.http.get(\"http://localhost:8080/api/mercados\", { headers }).toPromise();\n    // link rede\n    return this.http.get(\"https://apimercado-central.herokuapp.com/api/mercados\", { headers }).toPromise();\n  }\n\n  // listarCategorias() {\n  //   let username = 'servo'\n  //   let password = '123'\n  //   const headers = new HttpHeaders({ Authorization: 'Basic ' + btoa(username + ':' + password) });\n  //   // link local\n  //   // return this.http.get(\"http://localhost:8080/api/categorias\", { headers }).toPromise();\n  //   // link rede\n  //   return this.http.get(\"https://apimercado-central.herokuapp.com/api/categorias\", { headers }).toPromise();\n  // }\n\n  // escolher qual mercado\n  listarCategorias() {\n    let username = 'servo'\n    let password = '123'\n    const headers = new HttpHeaders({ Authorization: 'Basic ' + btoa(username + ':' + password) });\n    // link local\n    // let url = 'http://localhost:8080/api/' + this.mercadoSelecionado.value + \"/categorias\";\n    // return this.http.get(url, { headers }).toPromise();\n    // return this.http.get(\"http://localhost:8080/api/mercado1\", { headers }).toPromise();\n    // link rede\n    let url ='https://apimercado-central.herokuapp.com/api/' + this.mercadoSelecionado.value + \"/categorias\";\n    return this.http.get(url, { headers }).toPromise();\n  }\n\n  // escolher qual mercado\n  listarProdutos() {\n    let username = 'servo'\n    let password = '123'\n    const headers = new HttpHeaders({ Authorization: 'Basic ' + btoa(username + ':' + password) });\n    // link local\n    // let url ='http://localhost:8080/api/' + this.mercadoSelecionado.value;\n    // return this.http.get(url, { headers }).toPromise();\n    // return this.http.get(\"http://localhost:8080/api/mercado1\", { headers }).toPromise();\n    // link rede\n    let url = 'https://apimercado-central.herokuapp.com/api/' + this.mercadoSelecionado.value;\n    return this.http.get(url, { headers }).toPromise();\n  }\n\n  // login(username:string,password:string){\n  //     const headers = new HttpHeaders({ Authorization: 'Basic ' + btoa(username + ':' + password) });\n  //     return this.http.get(\"http://localhost:8080/login\",{headers,responseType: 'text' as 'json'})\n  //   }\n\n  // precisa estar logado\n  listarPedidos(val) {\n    // let username = 'usuario'\n    // let password = '123'\n    let username = val.username\n    let password = val.password;\n    let idCliente = this.saveUser.getInfoCliente().idCliente;\n    console.log(\"id: \", idCliente);\n    console.log(\"usuario | senha: \", username, password);\n    const headers = new HttpHeaders({ Authorization: 'Basic ' + btoa(username + ':' + password) });\n    // link local\n    // let url = 'http://localhost:8080/api/pedido/cliente/' + idCliente;\n    // return this.http.get(url, { headers }).toPromise();\n    // link rede\n    let url = 'https://apimercado-central.herokuapp.com/api/pedido/cliente/' + idCliente;\n    return this.http.get(url, { headers }).toPromise();\n  }\n\n\n  login(username: string, password: string) {\n    const headers = new HttpHeaders({ Authorization: 'Basic ' + btoa(username + ':' + password) });\n    // link local\n    // return this.http.get(\"http://localhost:8080/login\", { headers, responseType: 'text' as 'json' })\n    // link rede\n    return this.http.get(\"https://apimercado-central.herokuapp.com/login\", { headers, responseType: 'text' as 'json' })\n  }\n\n  sessaoCliente(val) {\n    // let username = 'lucatinho'\n    // let password = '123'\n    let username = val.username\n    let password = val.password;\n    const headers = new HttpHeaders({ Authorization: 'Basic ' + btoa(username + ':' + password) });\n    // link local\n    // let url = 'http://localhost:8080/api/cliente/nomelogin/' + username;\n    // return this.http.get(\"http://localhost:8080/api/cliente/nomelogin/joaozin\", { headers }).toPromise();\n    // return this.http.get(url, { headers }).toPromise();\n    // link rede\n    let url = 'https://apimercado-central.herokuapp.com/api/cliente/email/' + username;\n    return this.http.get(url, { headers }).toPromise();\n  }\n\n  logout() {\n    // let username = 'usuario'\n    // let password = '123'\n    let username = \"\"\n    let password = \"\"\n    const headers = new HttpHeaders({ Authorization: 'Basic ' + btoa(username + ':' + password) });\n    // link local\n    // return this.http.get(\"http://localhost:8080/logout\", { headers }).toPromise();\n    // link rede\n    return this.http.get(\"https://apimercado-central.herokuapp.com/logout\", { headers }).toPromise();\n  }\n  // !precisa estar logado\n\n  // POST -------------------------------------------------------------------------------------------------------\n\n  // cadastro de clientes -----------------------------------------------------------------------------------------\n  postCliente(cadastro: any) {\n    // let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    let username = 'servo'\n    let password = '123'\n    const headers = new HttpHeaders({ Authorization: 'Basic ' + btoa(username + ':' + password), 'Content-Type': 'application/json' });\n    // link local\n    // return this.http.post('http://localhost:8080/api/cliente', cadastro, { headers }).toPromise();\n    // link rede\n    return this.http.post('https://apimercado-central.herokuapp.com/api/cliente', cadastro, { headers }).toPromise();\n  }\n\n  verificacaoCadastroCliente() {\n    let username = 'servo'\n    let password = '123'\n    const headers = new HttpHeaders({ Authorization: 'Basic ' + btoa(username + ':' + password) });\n    // link local\n    // return this.http.get(\"http://localhost:8080/api/clientes\", { headers }).toPromise();\n    // link rede\n    return this.http.get(\"https://apimercado-central.herokuapp.com/api/clientes\", { headers }).toPromise();\n  }\n\n  cadastrarUsuario(cadastroUser: any) {\n    let username = 'servo'\n    let password = '123'\n    const headers = new HttpHeaders({ Authorization: 'Basic ' + btoa(username + ':' + password) });\n    // link local\n    // return this.http.post('http://localhost:8080/api/usuario', cadastroUser, { headers: headers }).toPromise();\n    // link rede\n    return this.http.post('https://apimercado-central.herokuapp.com/api/usuario', cadastroUser, { headers: headers }).toPromise();\n  }\n  // !cadastro de clientes ------------------------------------------------------------------------------------------\n\n  // Cadastro de pedidos\n  enviarPedido(pedido: any, val) {\n    // let username = 'usuario'\n    // let password = '123'\n    let username = val.username\n    let password = val.password;\n    const headers = new HttpHeaders({ Authorization: 'Basic ' + btoa(username + ':' + password), 'Content-Type': 'application/json' });\n    // link local\n    // return this.http.post('http://localhost:8080/api/pedido', pedido, { headers }).toPromise();\n    // link rede\n    return this.http.post('https://apimercado-central.herokuapp.com/api/pedido', pedido, { headers }).toPromise();\n  }\n  // !Cadastro de pedidos\n\n\n  // PUT ----------------------------------------------------------------------------------------------------------\n  // Cadastro de pedidos\n  adicionarMercadoFavorito(pedido: any) {\n    // let username = 'lucatinho'\n    // let password = '123'\n    let username = this.saveUser.getLogin().username;\n    let password = this.saveUser.getLogin().password;\n    const headers = new HttpHeaders({ Authorization: 'Basic ' + btoa(username + ':' + password), 'Content-Type': 'application/json' });\n    // link local\n    // return this.http.post('http://localhost:8080/api/pedido', pedido, { headers }).toPromise();\n    // link rede\n    return this.http.put('https://apimercado-central.herokuapp.com/api/cliente', pedido, { headers }).toPromise();\n  }\n  // !Cadastro de pedidos\n}","import { Injectable } from '@angular/core';\nimport { Storage } from '@ionic/storage';\nimport { ApimercadoService } from './apimercado.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VarUsuarioService {\n  private refresh:boolean = false\n  private login: any = [];\n  private infoCliente: any=[];\n  private pedidoSelecionado: any;\n  private pedidos: any;\n  private nomeMercadoSelecionado: string;\n  private SubCategoriaSelecionado: any = [\n    {\n      idSubCategoria: 1,\n      nomeSubCategoria: \"modelo\",\n      imgSubCategoria: null\n    }\n  ];\n  private freteMercado: any;\n  private SubCategorias: any;\n  private infoMercadoSelecionado:any;\n  private listaMercadoSelecionada:any;\n  // private login = new BehaviorSubject(0);\n\n  constructor(private storage: Storage) { }\n  // storage\n\n  // login ------------------------------------------------------------------\n  getLogin() {\n    if (this.login == null) {\n      this.login = \"\";\n      console.log(\"entrou no if\");\n    }else{\n    this.storage.get(\"login\").then((val) => {\n      this.login = val;\n    }).catch((response) => {\n      console.log(\"nao esta logado storage: \", response);\n    });}\n    return this.login;\n  }\n\n  postLogin(username: string, password: string) {\n    this.login = {\n      username: username,\n      password: password\n    };\n    console.log(\"varUser: \", this.login);\n\n    this.storage.set(\"login\", this.login).then(() => {\n      console.log(\"usuario salvo\")\n    });\n  }\n\n  deleteLogin() {\n    // mostrar no console log\n    this.storage.remove(\"login\").then(() => {\n      console.log(\"usuario deletado\");\n    });\n  }\n  // !login ------------------------------------------------------------------\n  // !storage\n\n  // idcliente -------------------------------------------------------------------\n  getInfoCliente() {\n    // this.storage.get(\"infoCliente\").then((val) => {\n    //   this.infoCliente = val;\n    //   console.log(\"depois\")\n    // }).catch((response) => {\n    //   console.log(\"infoCliente erro: \", response);\n    // });\n    return this.infoCliente;\n  }\n\n  postInfoCliente(infoCliente) {\n    this.infoCliente = infoCliente\n    // this.storage.set(\"infoCliente\", infoCliente).then(() => {\n    //   console.log(\"infoCliente salvo\")\n    // });\n    \n  }\n  // !idcliente -------------------------------------------------------------------\n\n  // listapedido\n  getPedidoSelecionado() {\n    return this.pedidoSelecionado;\n  }\n  postPedidoSelecionado(pedidoSelecionado) {\n    this.pedidoSelecionado = pedidoSelecionado;\n  }\n  // listaPedidos\n  getPedidos() {\n    return this.pedidos;\n  }\n  postPedidos(pedidos) {\n    this.pedidos = pedidos;\n  }\n  // nomeMercadoSelecionado\n  getFreteMercado() {\n    return this.freteMercado;\n  }\n  postFreteMercado(freteMercado: any) {\n    this.freteMercado = freteMercado;\n  }\n  // nomeMercadoSelecionado\n  getMercadoSelecionado() {\n    return this.nomeMercadoSelecionado;\n  }\n  postMercadoSelecionado(nomeMercadoSelecionado: string) {\n    this.nomeMercadoSelecionado = nomeMercadoSelecionado;\n  }\n\n  // nome da subcategoria\n  getSubCategorias() {\n    return this.SubCategorias;\n  }\n  postSubCategorias(SubCategorias: string) {\n    this.SubCategorias = SubCategorias;\n  }\n\n  // nome da subcategoria selecionada \n  getSubCategoriaSelecionado() {\n    return this.SubCategoriaSelecionado;\n  }\n  postSubCategoriaSelecionado(SubCategoriaSelecionado) {\n    this.SubCategoriaSelecionado = SubCategoriaSelecionado;\n  }\n\n  getInfoMercadoSelecionado(){\n   return this.infoMercadoSelecionado;\n  }\n\n  postInfoMercadoSelecionado(infoMercado){\n    this.infoMercadoSelecionado = infoMercado;\n  }\n\n  getListaCompraSelecionada(){\n    return this.listaMercadoSelecionada;\n   }\n \n   postListaCompraSelecionada(ListaMercadoSelecionada){\n     this.listaMercadoSelecionada = ListaMercadoSelecionada;\n   }\n \n}\n"],"sourceRoot":"webpack:///","file":"default~pages-cadastro-cadastro-module~pages-carrinho-carrinho-module~pages-index-index-module~pages~20d9ae09-es5.js"}