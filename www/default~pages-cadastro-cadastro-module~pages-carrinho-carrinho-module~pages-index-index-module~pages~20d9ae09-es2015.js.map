{"version":3,"sources":["./src/app/shared/apimercado.service.ts","./src/app/shared/var-usuario.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAA2C;AACoB;AACxB;AACmB;AAK1D,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IAW5B,0GAA0G;IAG1G,YAAoB,IAAgB,EAAU,QAA2B;QAArD,SAAI,GAAJ,IAAI,CAAY;QAAU,aAAQ,GAAR,QAAQ,CAAmB;QAbzE,mBAAmB;QACX,uBAAkB,GAAG,IAAI,oDAAe,CAAS,GAAG,CAAC,CAAC;QAC9D,8BAAyB,GAAG,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;QACnE,qBAAqB;QACb,yBAAoB,GAAG,IAAI,oDAAe,CAAS,GAAG,CAAC,CAAC;QAChE,gCAA2B,GAAG,IAAI,CAAC,oBAAoB,CAAC,YAAY,EAAE,CAAC;QACvE,iBAAiB;QACT,qBAAgB,GAAG,IAAI,oDAAe,CAAS,GAAG,CAAC,CAAC;QAC5D,4BAAuB,GAAG,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE,CAAC;IAKc,CAAC;IAE9E,yBAAyB;IACzB,wBAAwB,CAAC,OAAe;QACtC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,OAAO,CAAC;QACrC,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,OAAO,CAAC,CAAC;IACxC,CAAC;IACD,2BAA2B;IAC3B,0BAA0B,CAAC,SAAiB;QAC1C,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,SAAS,CAAC;QACzC,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,SAAS,CAAC,CAAC;IAC5C,CAAC;IACD,uBAAuB;IACvB,sBAAsB,CAAC,KAAa;QAClC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC;QACjC,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;IACpC,CAAC;IACD,yHAAyH;IAEzH,cAAc;QACZ,IAAI,QAAQ,GAAG,OAAO;QACtB,IAAI,QAAQ,GAAG,KAAK;QACpB,MAAM,OAAO,GAAG,IAAI,gEAAW,CAAC,EAAE,aAAa,EAAE,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,GAAG,GAAG,QAAQ,CAAC,EAAE,CAAC,CAAC;QAC/F,aAAa;QACb,uFAAuF;QACvF,YAAY;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,uDAAuD,EAAE,EAAE,OAAO,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC;IACzG,CAAC;IAED,uBAAuB;IACvB,2BAA2B;IAC3B,yBAAyB;IACzB,oGAAoG;IACpG,kBAAkB;IAClB,8FAA8F;IAC9F,iBAAiB;IACjB,8GAA8G;IAC9G,IAAI;IAEJ,wBAAwB;IACxB,gBAAgB;QACd,IAAI,QAAQ,GAAG,OAAO;QACtB,IAAI,QAAQ,GAAG,KAAK;QACpB,MAAM,OAAO,GAAG,IAAI,gEAAW,CAAC,EAAE,aAAa,EAAE,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,GAAG,GAAG,QAAQ,CAAC,EAAE,CAAC,CAAC;QAC/F,aAAa;QACb,0FAA0F;QAC1F,sDAAsD;QACtD,uFAAuF;QACvF,YAAY;QACZ,IAAI,GAAG,GAAE,+CAA+C,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,GAAG,aAAa,CAAC;QACzG,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,OAAO,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC;IACrD,CAAC;IAED,wBAAwB;IACxB,cAAc;QACZ,IAAI,QAAQ,GAAG,OAAO;QACtB,IAAI,QAAQ,GAAG,KAAK;QACpB,MAAM,OAAO,GAAG,IAAI,gEAAW,CAAC,EAAE,aAAa,EAAE,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,GAAG,GAAG,QAAQ,CAAC,EAAE,CAAC,CAAC;QAC/F,aAAa;QACb,yEAAyE;QACzE,sDAAsD;QACtD,uFAAuF;QACvF,YAAY;QACZ,IAAI,GAAG,GAAG,+CAA+C,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC;QAC1F,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,OAAO,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC;IACrD,CAAC;IAED,0CAA0C;IAC1C,sGAAsG;IACtG,mGAAmG;IACnG,MAAM;IAEN,uBAAuB;IACvB,aAAa,CAAC,GAAG;QACf,2BAA2B;QAC3B,uBAAuB;QACvB,IAAI,QAAQ,GAAG,GAAG,CAAC,QAAQ;QAC3B,IAAI,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC;QAC5B,IAAI,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC;QACzD,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;QAC/B,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;QACrD,MAAM,OAAO,GAAG,IAAI,gEAAW,CAAC,EAAE,aAAa,EAAE,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,GAAG,GAAG,QAAQ,CAAC,EAAE,CAAC,CAAC;QAC/F,aAAa;QACb,qEAAqE;QACrE,sDAAsD;QACtD,YAAY;QACZ,IAAI,GAAG,GAAG,8DAA8D,GAAG,SAAS,CAAC;QACrF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,OAAO,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC;IACrD,CAAC;IAGD,KAAK,CAAC,QAAgB,EAAE,QAAgB;QACtC,MAAM,OAAO,GAAG,IAAI,gEAAW,CAAC,EAAE,aAAa,EAAE,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,GAAG,GAAG,QAAQ,CAAC,EAAE,CAAC,CAAC;QAC/F,aAAa;QACb,mGAAmG;QACnG,YAAY;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,gDAAgD,EAAE,EAAE,OAAO,EAAE,YAAY,EAAE,MAAgB,EAAE,CAAC;IACrH,CAAC;IAED,aAAa,CAAC,GAAG;QACf,6BAA6B;QAC7B,uBAAuB;QACvB,IAAI,QAAQ,GAAG,GAAG,CAAC,QAAQ;QAC3B,IAAI,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC;QAC5B,MAAM,OAAO,GAAG,IAAI,gEAAW,CAAC,EAAE,aAAa,EAAE,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,GAAG,GAAG,QAAQ,CAAC,EAAE,CAAC,CAAC;QAC/F,aAAa;QACb,uEAAuE;QACvE,wGAAwG;QACxG,sDAAsD;QACtD,YAAY;QACZ,IAAI,GAAG,GAAG,6DAA6D,GAAG,QAAQ,CAAC;QACnF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,OAAO,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC;IACrD,CAAC;IAED,MAAM;QACJ,2BAA2B;QAC3B,uBAAuB;QACvB,IAAI,QAAQ,GAAG,EAAE;QACjB,IAAI,QAAQ,GAAG,EAAE;QACjB,MAAM,OAAO,GAAG,IAAI,gEAAW,CAAC,EAAE,aAAa,EAAE,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,GAAG,GAAG,QAAQ,CAAC,EAAE,CAAC,CAAC;QAC/F,aAAa;QACb,iFAAiF;QACjF,YAAY;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,iDAAiD,EAAE,EAAE,OAAO,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC;IACnG,CAAC;IACD,wBAAwB;IAExB,+GAA+G;IAE/G,iHAAiH;IACjH,WAAW,CAAC,QAAa;QACvB,yEAAyE;QACzE,IAAI,QAAQ,GAAG,OAAO;QACtB,IAAI,QAAQ,GAAG,KAAK;QACpB,MAAM,OAAO,GAAG,IAAI,gEAAW,CAAC,EAAE,aAAa,EAAE,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,GAAG,GAAG,QAAQ,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC,CAAC;QACnI,aAAa;QACb,iGAAiG;QACjG,YAAY;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,sDAAsD,EAAE,QAAQ,EAAE,EAAE,OAAO,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC;IACnH,CAAC;IAED,0BAA0B;QACxB,IAAI,QAAQ,GAAG,OAAO;QACtB,IAAI,QAAQ,GAAG,KAAK;QACpB,MAAM,OAAO,GAAG,IAAI,gEAAW,CAAC,EAAE,aAAa,EAAE,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,GAAG,GAAG,QAAQ,CAAC,EAAE,CAAC,CAAC;QAC/F,aAAa;QACb,uFAAuF;QACvF,YAAY;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,uDAAuD,EAAE,EAAE,OAAO,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC;IACzG,CAAC;IAED,gBAAgB,CAAC,YAAiB;QAChC,IAAI,QAAQ,GAAG,OAAO;QACtB,IAAI,QAAQ,GAAG,KAAK;QACpB,MAAM,OAAO,GAAG,IAAI,gEAAW,CAAC,EAAE,aAAa,EAAE,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,GAAG,GAAG,QAAQ,CAAC,EAAE,CAAC,CAAC;QAC/F,aAAa;QACb,8GAA8G;QAC9G,YAAY;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,sDAAsD,EAAE,YAAY,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC;IAChI,CAAC;IACD,mHAAmH;IAEnH,sBAAsB;IACtB,YAAY,CAAC,MAAW,EAAE,GAAG;QAC3B,2BAA2B;QAC3B,uBAAuB;QACvB,IAAI,QAAQ,GAAG,GAAG,CAAC,QAAQ;QAC3B,IAAI,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC;QAC5B,MAAM,OAAO,GAAG,IAAI,gEAAW,CAAC,EAAE,aAAa,EAAE,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,GAAG,GAAG,QAAQ,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC,CAAC;QACnI,aAAa;QACb,8FAA8F;QAC9F,YAAY;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,qDAAqD,EAAE,MAAM,EAAE,EAAE,OAAO,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC;IAChH,CAAC;IACD,uBAAuB;IAGvB,iHAAiH;IACjH,sBAAsB;IACtB,wBAAwB,CAAC,MAAW;QAClC,6BAA6B;QAC7B,uBAAuB;QACvB,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC;QACjD,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC;QACjD,MAAM,OAAO,GAAG,IAAI,gEAAW,CAAC,EAAE,aAAa,EAAE,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,GAAG,GAAG,QAAQ,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC,CAAC;QACnI,aAAa;QACb,8FAA8F;QAC9F,YAAY;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,sDAAsD,EAAE,MAAM,EAAE,EAAE,OAAO,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC;IAChH,CAAC;CAEF;;YA/L2B,+DAAU;YAAoB,sEAAiB;;AAd9D,iBAAiB;IAH7B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;2EAe0B,+DAAU,EAAoB,sEAAiB;GAd9D,iBAAiB,CA6M7B;AA7M6B;;;;;;;;;;;;;;;;;;;ACRa;AACF;AAMzC,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IAkB5B,0CAA0C;IAE1C,YAAoB,OAAgB;QAAhB,YAAO,GAAP,OAAO,CAAS;QAnB5B,YAAO,GAAW,KAAK;QACvB,UAAK,GAAQ,EAAE,CAAC;QAChB,gBAAW,GAAM,EAAE,CAAC;QAIpB,4BAAuB,GAAQ;YACrC;gBACE,cAAc,EAAE,CAAC;gBACjB,gBAAgB,EAAE,QAAQ;gBAC1B,eAAe,EAAE,IAAI;aACtB;SACF,CAAC;IAOsC,CAAC;IACzC,UAAU;IAEV,2EAA2E;IAC3E,QAAQ;QACN,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,EAAE;YACtB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;YAChB,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;SAC7B;aAAI;YACL,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;gBACrC,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;YACnB,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE,EAAE;gBACpB,OAAO,CAAC,GAAG,CAAC,2BAA2B,EAAE,QAAQ,CAAC,CAAC;YACrD,CAAC,CAAC,CAAC;SAAC;QACJ,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IAED,SAAS,CAAC,QAAgB,EAAE,QAAgB;QAC1C,IAAI,CAAC,KAAK,GAAG;YACX,QAAQ,EAAE,QAAQ;YAClB,QAAQ,EAAE,QAAQ;SACnB,CAAC;QACF,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QAErC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;YAC9C,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC;QAC9B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,WAAW;QACT,yBAAyB;QACzB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;YACrC,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;IACL,CAAC;IACD,4EAA4E;IAC5E,WAAW;IAEX,gFAAgF;IAChF,cAAc;QACZ,kDAAkD;QAClD,4BAA4B;QAC5B,0BAA0B;QAC1B,2BAA2B;QAC3B,iDAAiD;QACjD,MAAM;QACN,OAAO,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC;IAED,eAAe,CAAC,WAAW;QACzB,IAAI,CAAC,WAAW,GAAG,WAAW;QAC9B,4DAA4D;QAC5D,qCAAqC;QACrC,MAAM;IAER,CAAC;IACD,iFAAiF;IAEjF,cAAc;IACd,oBAAoB;QAClB,OAAO,IAAI,CAAC,iBAAiB,CAAC;IAChC,CAAC;IACD,qBAAqB,CAAC,iBAAiB;QACrC,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;IAC7C,CAAC;IACD,eAAe;IACf,UAAU;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IACD,WAAW,CAAC,OAAO;QACjB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACzB,CAAC;IACD,yBAAyB;IACzB,eAAe;QACb,OAAO,IAAI,CAAC,YAAY,CAAC;IAC3B,CAAC;IACD,gBAAgB,CAAC,YAAiB;QAChC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;IACnC,CAAC;IACD,yBAAyB;IACzB,qBAAqB;QACnB,OAAO,IAAI,CAAC,sBAAsB,CAAC;IACrC,CAAC;IACD,sBAAsB,CAAC,sBAA8B;QACnD,IAAI,CAAC,sBAAsB,GAAG,sBAAsB,CAAC;IACvD,CAAC;IAED,uBAAuB;IACvB,gBAAgB;QACd,OAAO,IAAI,CAAC,aAAa,CAAC;IAC5B,CAAC;IACD,iBAAiB,CAAC,aAAqB;QACrC,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;IACrC,CAAC;IAED,oCAAoC;IACpC,0BAA0B;QACxB,OAAO,IAAI,CAAC,uBAAuB,CAAC;IACtC,CAAC;IACD,2BAA2B,CAAC,uBAAuB;QACjD,IAAI,CAAC,uBAAuB,GAAG,uBAAuB,CAAC;IACzD,CAAC;IAED,yBAAyB;QACxB,OAAO,IAAI,CAAC,sBAAsB,CAAC;IACpC,CAAC;IAED,0BAA0B,CAAC,WAAW;QACpC,IAAI,CAAC,sBAAsB,GAAG,WAAW,CAAC;IAC5C,CAAC;IAED,yBAAyB;QACvB,OAAO,IAAI,CAAC,uBAAuB,CAAC;IACrC,CAAC;IAED,0BAA0B,CAAC,uBAAuB;QAChD,IAAI,CAAC,uBAAuB,GAAG,uBAAuB,CAAC;IACzD,CAAC;CAEH;;YAvH8B,sDAAO;;AApBzB,iBAAiB;IAH7B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;2EAqB6B,sDAAO;GApBzB,iBAAiB,CA2I7B;AA3I6B","file":"default~pages-cadastro-cadastro-module~pages-carrinho-carrinho-module~pages-index-index-module~pages~20d9ae09-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { BehaviorSubject } from 'rxjs';\nimport { VarUsuarioService } from './var-usuario.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApimercadoService {\n  // variavel mercado\n  private mercadoSelecionado = new BehaviorSubject<string>(\"0\");\n  currentMercadoSelecionado = this.mercadoSelecionado.asObservable();\n  // variavel categoria\n  private categoriaSelecionado = new BehaviorSubject<string>(\"1\");\n  currentCategoriaSelecionado = this.categoriaSelecionado.asObservable();\n  // variavel lista\n  private listaSelecionado = new BehaviorSubject<string>(\"0\");\n  currentListaSelecionado = this.listaSelecionado.asObservable();\n\n  // login =================================================================================================\n\n\n  constructor(private http: HttpClient, private saveUser: VarUsuarioService) { }\n\n  // mudar variavel mercado\n  changeMercadoSelecionado(mercado: string) {\n    this.mercadoSelecionado.next(mercado)\n    console.log(\"MercadoData: \", mercado);\n  }\n  // mudar variavel categoria\n  changeCategoriaSelecionado(categoria: string) {\n    this.categoriaSelecionado.next(categoria)\n    console.log(\"CategoriaData: \", categoria);\n  }\n  // mudar variavel lista\n  changeListaSelecionado(lista: string) {\n    this.listaSelecionado.next(lista)\n    console.log(\"ListaData: \", lista);\n  }\n  // GET ------------------------------------------------------------------------------------------------------------------\n\n  listarMercados() {\n    let username = 'servo'\n    let password = '123'\n    const headers = new HttpHeaders({ Authorization: 'Basic ' + btoa(username + ':' + password) });\n    // link local\n    // return this.http.get(\"http://localhost:8080/api/mercados\", { headers }).toPromise();\n    // link rede\n    return this.http.get(\"https://apimercado-central.herokuapp.com/api/mercados\", { headers }).toPromise();\n  }\n\n  // listarCategorias() {\n  //   let username = 'servo'\n  //   let password = '123'\n  //   const headers = new HttpHeaders({ Authorization: 'Basic ' + btoa(username + ':' + password) });\n  //   // link local\n  //   // return this.http.get(\"http://localhost:8080/api/categorias\", { headers }).toPromise();\n  //   // link rede\n  //   return this.http.get(\"https://apimercado-central.herokuapp.com/api/categorias\", { headers }).toPromise();\n  // }\n\n  // escolher qual mercado\n  listarCategorias() {\n    let username = 'servo'\n    let password = '123'\n    const headers = new HttpHeaders({ Authorization: 'Basic ' + btoa(username + ':' + password) });\n    // link local\n    // let url = 'http://localhost:8080/api/' + this.mercadoSelecionado.value + \"/categorias\";\n    // return this.http.get(url, { headers }).toPromise();\n    // return this.http.get(\"http://localhost:8080/api/mercado1\", { headers }).toPromise();\n    // link rede\n    let url ='https://apimercado-central.herokuapp.com/api/' + this.mercadoSelecionado.value + \"/categorias\";\n    return this.http.get(url, { headers }).toPromise();\n  }\n\n  // escolher qual mercado\n  listarProdutos() {\n    let username = 'servo'\n    let password = '123'\n    const headers = new HttpHeaders({ Authorization: 'Basic ' + btoa(username + ':' + password) });\n    // link local\n    // let url ='http://localhost:8080/api/' + this.mercadoSelecionado.value;\n    // return this.http.get(url, { headers }).toPromise();\n    // return this.http.get(\"http://localhost:8080/api/mercado1\", { headers }).toPromise();\n    // link rede\n    let url = 'https://apimercado-central.herokuapp.com/api/' + this.mercadoSelecionado.value;\n    return this.http.get(url, { headers }).toPromise();\n  }\n\n  // login(username:string,password:string){\n  //     const headers = new HttpHeaders({ Authorization: 'Basic ' + btoa(username + ':' + password) });\n  //     return this.http.get(\"http://localhost:8080/login\",{headers,responseType: 'text' as 'json'})\n  //   }\n\n  // precisa estar logado\n  listarPedidos(val) {\n    // let username = 'usuario'\n    // let password = '123'\n    let username = val.username\n    let password = val.password;\n    let idCliente = this.saveUser.getInfoCliente().idCliente;\n    console.log(\"id: \", idCliente);\n    console.log(\"usuario | senha: \", username, password);\n    const headers = new HttpHeaders({ Authorization: 'Basic ' + btoa(username + ':' + password) });\n    // link local\n    // let url = 'http://localhost:8080/api/pedido/cliente/' + idCliente;\n    // return this.http.get(url, { headers }).toPromise();\n    // link rede\n    let url = 'https://apimercado-central.herokuapp.com/api/pedido/cliente/' + idCliente;\n    return this.http.get(url, { headers }).toPromise();\n  }\n\n\n  login(username: string, password: string) {\n    const headers = new HttpHeaders({ Authorization: 'Basic ' + btoa(username + ':' + password) });\n    // link local\n    // return this.http.get(\"http://localhost:8080/login\", { headers, responseType: 'text' as 'json' })\n    // link rede\n    return this.http.get(\"https://apimercado-central.herokuapp.com/login\", { headers, responseType: 'text' as 'json' })\n  }\n\n  sessaoCliente(val) {\n    // let username = 'lucatinho'\n    // let password = '123'\n    let username = val.username\n    let password = val.password;\n    const headers = new HttpHeaders({ Authorization: 'Basic ' + btoa(username + ':' + password) });\n    // link local\n    // let url = 'http://localhost:8080/api/cliente/nomelogin/' + username;\n    // return this.http.get(\"http://localhost:8080/api/cliente/nomelogin/joaozin\", { headers }).toPromise();\n    // return this.http.get(url, { headers }).toPromise();\n    // link rede\n    let url = 'https://apimercado-central.herokuapp.com/api/cliente/email/' + username;\n    return this.http.get(url, { headers }).toPromise();\n  }\n\n  logout() {\n    // let username = 'usuario'\n    // let password = '123'\n    let username = \"\"\n    let password = \"\"\n    const headers = new HttpHeaders({ Authorization: 'Basic ' + btoa(username + ':' + password) });\n    // link local\n    // return this.http.get(\"http://localhost:8080/logout\", { headers }).toPromise();\n    // link rede\n    return this.http.get(\"https://apimercado-central.herokuapp.com/logout\", { headers }).toPromise();\n  }\n  // !precisa estar logado\n\n  // POST -------------------------------------------------------------------------------------------------------\n\n  // cadastro de clientes -----------------------------------------------------------------------------------------\n  postCliente(cadastro: any) {\n    // let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    let username = 'servo'\n    let password = '123'\n    const headers = new HttpHeaders({ Authorization: 'Basic ' + btoa(username + ':' + password), 'Content-Type': 'application/json' });\n    // link local\n    // return this.http.post('http://localhost:8080/api/cliente', cadastro, { headers }).toPromise();\n    // link rede\n    return this.http.post('https://apimercado-central.herokuapp.com/api/cliente', cadastro, { headers }).toPromise();\n  }\n\n  verificacaoCadastroCliente() {\n    let username = 'servo'\n    let password = '123'\n    const headers = new HttpHeaders({ Authorization: 'Basic ' + btoa(username + ':' + password) });\n    // link local\n    // return this.http.get(\"http://localhost:8080/api/clientes\", { headers }).toPromise();\n    // link rede\n    return this.http.get(\"https://apimercado-central.herokuapp.com/api/clientes\", { headers }).toPromise();\n  }\n\n  cadastrarUsuario(cadastroUser: any) {\n    let username = 'servo'\n    let password = '123'\n    const headers = new HttpHeaders({ Authorization: 'Basic ' + btoa(username + ':' + password) });\n    // link local\n    // return this.http.post('http://localhost:8080/api/usuario', cadastroUser, { headers: headers }).toPromise();\n    // link rede\n    return this.http.post('https://apimercado-central.herokuapp.com/api/usuario', cadastroUser, { headers: headers }).toPromise();\n  }\n  // !cadastro de clientes ------------------------------------------------------------------------------------------\n\n  // Cadastro de pedidos\n  enviarPedido(pedido: any, val) {\n    // let username = 'usuario'\n    // let password = '123'\n    let username = val.username\n    let password = val.password;\n    const headers = new HttpHeaders({ Authorization: 'Basic ' + btoa(username + ':' + password), 'Content-Type': 'application/json' });\n    // link local\n    // return this.http.post('http://localhost:8080/api/pedido', pedido, { headers }).toPromise();\n    // link rede\n    return this.http.post('https://apimercado-central.herokuapp.com/api/pedido', pedido, { headers }).toPromise();\n  }\n  // !Cadastro de pedidos\n\n\n  // PUT ----------------------------------------------------------------------------------------------------------\n  // Cadastro de pedidos\n  adicionarMercadoFavorito(pedido: any) {\n    // let username = 'lucatinho'\n    // let password = '123'\n    let username = this.saveUser.getLogin().username;\n    let password = this.saveUser.getLogin().password;\n    const headers = new HttpHeaders({ Authorization: 'Basic ' + btoa(username + ':' + password), 'Content-Type': 'application/json' });\n    // link local\n    // return this.http.post('http://localhost:8080/api/pedido', pedido, { headers }).toPromise();\n    // link rede\n    return this.http.put('https://apimercado-central.herokuapp.com/api/cliente', pedido, { headers }).toPromise();\n  }\n  // !Cadastro de pedidos\n}","import { Injectable } from '@angular/core';\nimport { Storage } from '@ionic/storage';\nimport { ApimercadoService } from './apimercado.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VarUsuarioService {\n  private refresh:boolean = false\n  private login: any = [];\n  private infoCliente: any=[];\n  private pedidoSelecionado: any;\n  private pedidos: any;\n  private nomeMercadoSelecionado: string;\n  private SubCategoriaSelecionado: any = [\n    {\n      idSubCategoria: 1,\n      nomeSubCategoria: \"modelo\",\n      imgSubCategoria: null\n    }\n  ];\n  private freteMercado: any;\n  private SubCategorias: any;\n  private infoMercadoSelecionado:any;\n  private listaMercadoSelecionada:any;\n  // private login = new BehaviorSubject(0);\n\n  constructor(private storage: Storage) { }\n  // storage\n\n  // login ------------------------------------------------------------------\n  getLogin() {\n    if (this.login == null) {\n      this.login = \"\";\n      console.log(\"entrou no if\");\n    }else{\n    this.storage.get(\"login\").then((val) => {\n      this.login = val;\n    }).catch((response) => {\n      console.log(\"nao esta logado storage: \", response);\n    });}\n    return this.login;\n  }\n\n  postLogin(username: string, password: string) {\n    this.login = {\n      username: username,\n      password: password\n    };\n    console.log(\"varUser: \", this.login);\n\n    this.storage.set(\"login\", this.login).then(() => {\n      console.log(\"usuario salvo\")\n    });\n  }\n\n  deleteLogin() {\n    // mostrar no console log\n    this.storage.remove(\"login\").then(() => {\n      console.log(\"usuario deletado\");\n    });\n  }\n  // !login ------------------------------------------------------------------\n  // !storage\n\n  // idcliente -------------------------------------------------------------------\n  getInfoCliente() {\n    // this.storage.get(\"infoCliente\").then((val) => {\n    //   this.infoCliente = val;\n    //   console.log(\"depois\")\n    // }).catch((response) => {\n    //   console.log(\"infoCliente erro: \", response);\n    // });\n    return this.infoCliente;\n  }\n\n  postInfoCliente(infoCliente) {\n    this.infoCliente = infoCliente\n    // this.storage.set(\"infoCliente\", infoCliente).then(() => {\n    //   console.log(\"infoCliente salvo\")\n    // });\n    \n  }\n  // !idcliente -------------------------------------------------------------------\n\n  // listapedido\n  getPedidoSelecionado() {\n    return this.pedidoSelecionado;\n  }\n  postPedidoSelecionado(pedidoSelecionado) {\n    this.pedidoSelecionado = pedidoSelecionado;\n  }\n  // listaPedidos\n  getPedidos() {\n    return this.pedidos;\n  }\n  postPedidos(pedidos) {\n    this.pedidos = pedidos;\n  }\n  // nomeMercadoSelecionado\n  getFreteMercado() {\n    return this.freteMercado;\n  }\n  postFreteMercado(freteMercado: any) {\n    this.freteMercado = freteMercado;\n  }\n  // nomeMercadoSelecionado\n  getMercadoSelecionado() {\n    return this.nomeMercadoSelecionado;\n  }\n  postMercadoSelecionado(nomeMercadoSelecionado: string) {\n    this.nomeMercadoSelecionado = nomeMercadoSelecionado;\n  }\n\n  // nome da subcategoria\n  getSubCategorias() {\n    return this.SubCategorias;\n  }\n  postSubCategorias(SubCategorias: string) {\n    this.SubCategorias = SubCategorias;\n  }\n\n  // nome da subcategoria selecionada \n  getSubCategoriaSelecionado() {\n    return this.SubCategoriaSelecionado;\n  }\n  postSubCategoriaSelecionado(SubCategoriaSelecionado) {\n    this.SubCategoriaSelecionado = SubCategoriaSelecionado;\n  }\n\n  getInfoMercadoSelecionado(){\n   return this.infoMercadoSelecionado;\n  }\n\n  postInfoMercadoSelecionado(infoMercado){\n    this.infoMercadoSelecionado = infoMercado;\n  }\n\n  getListaCompraSelecionada(){\n    return this.listaMercadoSelecionada;\n   }\n \n   postListaCompraSelecionada(ListaMercadoSelecionada){\n     this.listaMercadoSelecionada = ListaMercadoSelecionada;\n   }\n \n}\n"],"sourceRoot":"webpack:///"}